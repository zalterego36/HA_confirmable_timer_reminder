blueprint:
  name: Confirmable Reminder with Timer Reset
  description: >
    Sends a reminder if a task (like cleaning) hasn't been done in a while.
    Offers a Yes/No confirmation. 'Yes' resets a timer. Supports mobile device or group notifications.
  domain: automation
  input:
    task_name:
      name: Task Name
      description: A friendly name for the task (e.g., "Clean Toilet").
      selector:
        text:
    date_entity:
      name: Date/Time Entity
      description: An input_datetime entity that stores the last time the task was completed.
      selector:
        entity:
          domain: input_datetime
    reminder_interval:
      name: Reminder Interval (Days)
      description: How many days before sending a reminder?
      default: 7
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: days
    notification_target:
      name: Notification Target (Device or Group)
      description: >
        The notify service to use (e.g., notify.mobile_app_your_phone or notify.all_users).
        Must be a valid notify.* service from your setup.
      selector:
        text:
    reminder_toggle:
      name: Reminder Toggle (Optional)
      description: Optional input_boolean to enable or disable reminders.
      default: ""
      selector:
        entity:
          domain: input_boolean

trigger:
  - platform: time
    at: "09:00:00"

condition:
  - condition: template
    value_template: >
      {% set last_done = states[inputs.date_entity].state %}
      {% if not last_done %}
        false
      {% else %}
        {% set last = as_datetime(last_done) %}
        {% set days_passed = (now() - last).days %}
        {{ days_passed >= inputs.reminder_interval }}
      {% endif %}

  - condition: template
    value_template: >
      {% if inputs.reminder_toggle == '' %}
        true
      {% else %}
        {{ is_state(inputs.reminder_toggle, 'on') }}
      {% endif %}

action:
  - service: "{{ inputs.notification_target }}"
    data:
      message: "Have you {{ input.task_name.lower() }} recently?"
      title: "Reminder: {{ input.task_name }}"
      data:
        actions:
          - action: "YES_{{ input.task_name | slugify }}"
            title: "Yes"
          - action: "NO_{{ input.task_name | slugify }}"
            title: "No"

mode: single

# Handle Yes confirmation via a separate automation:
# Create a separate automation triggered by the chosen action ID
# Example:
# trigger:
#   - platform: event
#     event_type: mobile_app_notification_action
#     event_data:
#       action: "YES_clean_toilet"
# action:
#   - service: input_datetime.set_datetime
#     target:
#       entity_id: input_datetime.toilet_last_cleaned
